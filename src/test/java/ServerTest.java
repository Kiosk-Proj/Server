/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import org.junit.Assert;
import org.junit.Test;
import org.millburn.kiosk.Server;
import org.millburn.kiosk.ServerInitializer;
import org.millburn.kiosk.tcp.Message;

import java.io.IOException;
import java.net.Socket;
import java.nio.ByteBuffer;

import static org.junit.Assert.*;

public class ServerTest {
    @Test public void testAppHasAGreeting() {
        ServerInitializer classUnderTest = new ServerInitializer();
        assertNotNull("app should have a greeting", classUnderTest);
    }

    @Test public void testTCP() throws IOException, InterruptedException {
        var t = new Thread(ServerInitializer::main);
        t.setDaemon(true);
        t.start();

        Thread.sleep(500);

        Socket socket = new Socket("localhost", 25565);

        Message message = new Message(Message.CONNECTION, 0, ByteBuffer.allocate(2 * Integer.SIZE).putInt(0).putInt(2).array());
        message.write(socket.getOutputStream());

        try {
            Message.read(socket.getInputStream());
        }catch (Exception e){
            Assert.fail();
        }

        Thread.sleep(200);

        message = new Message(Message.INPUT, 0, ByteBuffer.allocate(Integer.SIZE).putInt(12598).array());
        message.write(socket.getOutputStream());

        Message.read(socket.getInputStream());

        var returnm = Message.read(socket.getInputStream());

        System.out.println("Received " + returnm.getDataStream().readString());

    }
}
